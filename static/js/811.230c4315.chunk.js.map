{"version":3,"file":"static/js/811.230c4315.chunk.js","mappings":"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","sources":["components/Cast/Cast.Styled.js","components/Cast/Cast.jsx","components/MovieList/MovieList.Styled.js","components/MovieList/MovieList.jsx","components/api.js","pages/Home.Styled.js","pages/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastWrap = styled.div`\n  padding: 10px 0 0;\n`;\n\nexport const CastTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 10px;\n`;\n\nexport const CastList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  justify-items: center;\n`;\n\nexport const CastLi = styled.li`\n  width: 200px;\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../api';\nimport { CastLi, CastList, CastTitle, CastWrap } from './Cast.Styled';\nimport { defaultImg } from 'pages/Home';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const fetchedMovieCast = await fetchCast(movieId);\n        setCast(fetchedMovieCast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <CastWrap>\n      <CastTitle>Cast:</CastTitle>\n      {cast && cast.length > 0 ? (\n        <CastList>\n          {cast.map(actor => (\n            <CastLi key={actor.id}>\n              <h3>{actor.original_name}</h3>\n\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                    : defaultImg\n                }\n                alt={actor.original_name}\n              />\n            </CastLi>\n          ))}\n        </CastList>\n      ) : (\n        'Cast not found â˜¹'\n      )}\n    </CastWrap>\n  );\n};\nexport default Cast;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  justify-items: center;\n`;\n\nexport const MovieListLi = styled.li`\n  width: 200px;\n  border: transparent;\n  /* padding: 10px; */\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const MovieListLink = styled(Link)`\n  text-decoration: none;\n  color: aliceblue;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: #6a046a;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieListLi,\n  MovieListLink,\n  MovieListWrapper,\n} from './MovieList.Styled';\n\nexport const MovieListMarkup = ({ movieItems }) => {\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\n  return (\n    <MovieListWrapper>\n      <MovieList>\n        {movieItems &&\n          movieItems.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const viewTitle =\n                title || name || original_title || original_name;\n              return (\n                <MovieListLi key={id}>\n                  <MovieListLink\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    {viewTitle}\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={original_title}\n                    />\n                  </MovieListLink>\n                </MovieListLi>\n              );\n            }\n          )}\n      </MovieList>\n    </MovieListWrapper>\n  );\n};\n","import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport const fetchTrendingMov = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const fetchedMovie = await axios.get(`movie/${movieId}`);\n  return fetchedMovie.data;\n};\n\nexport const searchMovie = async movieName => {\n  const fetchSearchMovies = await axios.get(`search/movie?query=${movieName}`);\n  return fetchSearchMovies.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const fetchedMovieCast = await axios.get(`movie/${movieId}/credits`);\n  return fetchedMovieCast.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const fetchedReviews = await axios.get(`movie/${movieId}/reviews`);\n  return fetchedReviews.data.results;\n};\n\nexport const fetchTrailer = async movieId => {\n  const fetchTrailer = await axios.get(`movie/${movieId}/videos`);\n  return fetchTrailer.data.results;\n};\n","import styled from 'styled-components';\n\nexport const HomeText = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMov } from '../components/api';\nimport { MovieListMarkup } from '../components/MovieList/MovieList';\nimport { HomeText } from './Home.Styled';\n\nexport const defaultImg =\n  'https://img.freepik.com/free-photo/image-icon-front-side_187299-39480.jpg?t=st=1710668854~exp=1710672454~hmac=d3a111eb521149c8bf1548d1ba9c4df4fdfccc7483865c11965ed188d2ee8b7b&w=200';\n\nconst Home = () => {\n  const [trendingsItems, setTrendingItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchTrendingMov();\n        setTrendingItems(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <HomeText>Today's trending movies</HomeText>\n      <MovieListMarkup movieItems={trendingsItems} />\n    </div>\n  );\n};\nexport default Home;\n"],"names":["CastWrap","styled","CastTitle","CastList","CastLi","useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchCast","fetchedMovieCast","console","error","length","map","actor","original_name","src","profile_path","defaultImg","alt","id","MovieListWrapper","MovieList","MovieListLi","MovieListLink","Link","MovieListMarkup","movieItems","location","useLocation","title","original_title","name","poster_path","viewTitle","to","state","from","axios","language","fetchTrendingMov","response","data","results","fetchMovie","fetchedMovie","searchMovie","movieName","fetchSearchMovies","fetchReviews","fetchedReviews","fetchTrailer","HomeText","trendingsItems","setTrendingItems","fetchData"],"sourceRoot":""}