{"version":3,"file":"static/js/907.2dca4ec9.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.Styled.js","components/Trailer/Trailer.Style.js","components/Trailer/Trailer.jsx","components/MovieDetails/MovieDetails.jsx","components/MovieList/MovieList.Styled.js","components/MovieList/MovieList.jsx","components/api.js","pages/Home.Styled.js","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const BackLinkStyled = styled(Link)`\n  display: flex;\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: rgba(128, 0, 128, 0.8);\n  }\n\n  &:focus {\n    color: rgba(128, 0, 128, 0.8);\n  }\n`;\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px 0;\n\n  @media screen and (max-width: 1199px) {\n    flex-direction: column;\n  }\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 0 20px;\n`;\n\nexport const DetailsTextWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const MovieTitleStyled = styled.h1`\n  margin-bottom: 10px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const MovieTaglineStyled = styled.h2`\n  margin-bottom: 10px;\n`;\n\nexport const MovieReleaseDateStyled = styled.h3`\n  margin-bottom: 6px;\n`;\n\nexport const MovieGenresWrap = styled.div`\n  display: flex;\n  align-items: baseline;\n  margin-bottom: 6px;\n`;\n\nexport const DetailsUlStyled = styled.ul`\n  display: flex;\n`;\n\nexport const DetailsLiStyled = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const DetailsLinkStyled = styled(Link)`\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: rgba(128, 0, 128, 0.8);\n  }\n\n  &:focus {\n    color: rgba(128, 0, 128, 0.8);\n  }\n`;\n\nexport const MoviePoster = styled.img`\n  max-width: 400px;\n  @media screen and (max-width: 767px) {\n    max-width: 300px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const TrailerWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import { fetchTrailer } from 'components/api';\nimport React, { useState, useEffect } from 'react';\nimport { TrailerWrapper } from './Trailer.Style';\n\nconst MovieTrailer = ({ movieId }) => {\n  const [trailerKey, setTrailerKey] = useState('');\n  const [isMobile, setIsMobile] = useState(false);\n\n  useEffect(() => {\n    const getTrailer = async () => {\n      try {\n        const fetchedTrailer = await fetchTrailer(movieId);\n        if (fetchedTrailer.length > 0) {\n          setTrailerKey(fetchedTrailer[0].key);\n        }\n      } catch (error) {\n        console.error('Error fetching trailer:', error);\n      }\n    };\n\n    getTrailer();\n    //// Перевірка розміру вікна браузера для визначення мобільного пристрою ////\n    const handleResize = () => {\n      //// Встановлюю межу для моб пристроїв ////\n      setIsMobile(window.innerWidth <= 767);\n    };\n\n    //// Перевірка розмір вікна під час монтажу компонента ////\n    handleResize();\n\n    //// Додаю слухача подій для зміни розміру вікна ////\n    window.addEventListener('resize', handleResize);\n\n    //// Прибираю слухача подій під час розмонтажу компонента ////\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [movieId]);\n\n  return (\n    <TrailerWrapper>\n      {trailerKey && (\n        <iframe\n          title=\"movie-trailer\"\n          width={isMobile ? '280' : '560'}\n          height={isMobile ? '158' : '315'}\n          src={`https://www.youtube.com/embed/${trailerKey}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        ></iframe>\n      )}\n    </TrailerWrapper>\n  );\n};\n\nexport default MovieTrailer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { fetchMovie } from 'components/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { defaultImg } from '../../pages/Home';\nimport {\n  MovieWrap,\n  DetailsTextWrapper,\n  DetailsWrapper,\n  Wrapper,\n  BackLinkStyled,\n  DetailsLinkStyled,\n  DetailsUlStyled,\n  DetailsLiStyled,\n  MovieGenresWrap,\n  MovieTitleStyled,\n  MovieTaglineStyled,\n  MovieReleaseDateStyled,\n  MoviePoster,\n} from 'components/MovieDetails/MovieDetails.Styled';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieTrailer from 'components/Trailer/Trailer';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(0);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieId = async () => {\n      try {\n        const getMovie = await fetchMovie(movieId);\n        setMovie(getMovie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMovieId();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <BackLinkStyled to={backLinkLocationRef.current}>\n        <FaArrowLeft />\n        Back\n      </BackLinkStyled>\n      <MovieWrap>\n        <div>\n          <MoviePoster\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w400${movie.poster_path}`\n                : defaultImg\n            }\n            alt={movie.title}\n          />\n        </div>\n\n        <DetailsWrapper>\n          <DetailsTextWrapper>\n            <MovieTitleStyled>{movie.original_title}</MovieTitleStyled>\n            <MovieTaglineStyled>\n              <i>{movie.tagline}</i>\n            </MovieTaglineStyled>\n            <MovieReleaseDateStyled>\n              Release date: {movie.release_date}\n            </MovieReleaseDateStyled>\n            <MovieGenresWrap>\n              <h3>Genres: </h3>\n              {movie.genres && Array.isArray(movie.genres) ? (\n                <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n              ) : (\n                <p>No genres available</p>\n              )}\n            </MovieGenresWrap>\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </DetailsTextWrapper>\n          <MovieTrailer movieId={movieId} />\n        </DetailsWrapper>\n      </MovieWrap>\n      <DetailsUlStyled>\n        <DetailsLiStyled>\n          <DetailsLinkStyled to=\"cast\">Cast</DetailsLinkStyled>\n        </DetailsLiStyled>\n        <DetailsLiStyled>\n          <DetailsLinkStyled to=\"reviews\">Reviews</DetailsLinkStyled>\n        </DetailsLiStyled>\n      </DetailsUlStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n};\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  justify-items: center;\n`;\n\nexport const MovieListLi = styled.li`\n  width: 200px;\n  border: transparent;\n  /* padding: 10px; */\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const MovieListLink = styled(Link)`\n  text-decoration: none;\n  color: aliceblue;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: #6a046a;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieListLi,\n  MovieListLink,\n  MovieListWrapper,\n} from './MovieList.Styled';\n\nexport const MovieListMarkup = ({ movieItems }) => {\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\n  return (\n    <MovieListWrapper>\n      <MovieList>\n        {movieItems &&\n          movieItems.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const viewTitle =\n                title || name || original_title || original_name;\n              return (\n                <MovieListLi key={id}>\n                  <MovieListLink\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    {viewTitle}\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={original_title}\n                    />\n                  </MovieListLink>\n                </MovieListLi>\n              );\n            }\n          )}\n      </MovieList>\n    </MovieListWrapper>\n  );\n};\n","import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport const fetchTrendingMov = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const fetchedMovie = await axios.get(`movie/${movieId}`);\n  return fetchedMovie.data;\n};\n\nexport const searchMovie = async movieName => {\n  const fetchSearchMovies = await axios.get(`search/movie?query=${movieName}`);\n  return fetchSearchMovies.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const fetchedMovieCast = await axios.get(`movie/${movieId}/credits`);\n  return fetchedMovieCast.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const fetchedReviews = await axios.get(`movie/${movieId}/reviews`);\n  return fetchedReviews.data.results;\n};\n\nexport const fetchTrailer = async movieId => {\n  const fetchTrailer = await axios.get(`movie/${movieId}/videos`);\n  return fetchTrailer.data.results;\n};\n","import styled from 'styled-components';\n\nexport const HomeText = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMov } from '../components/api';\nimport { MovieListMarkup } from '../components/MovieList/MovieList';\nimport { HomeText } from './Home.Styled';\n\nexport const defaultImg =\n  'https://img.freepik.com/free-photo/image-icon-front-side_187299-39480.jpg?t=st=1710668854~exp=1710672454~hmac=d3a111eb521149c8bf1548d1ba9c4df4fdfccc7483865c11965ed188d2ee8b7b&w=200';\n\nconst Home = () => {\n  const [trendingsItems, setTrendingItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchTrendingMov();\n        setTrendingItems(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <HomeText>Today's trending movies</HomeText>\n      <MovieListMarkup movieItems={trendingsItems} />\n    </div>\n  );\n};\nexport default Home;\n"],"names":["Wrapper","styled","BackLinkStyled","Link","MovieWrap","DetailsWrapper","DetailsTextWrapper","MovieTitleStyled","MovieTaglineStyled","MovieReleaseDateStyled","MovieGenresWrap","DetailsUlStyled","DetailsLiStyled","DetailsLinkStyled","MoviePoster","TrailerWrapper","movieId","useState","trailerKey","setTrailerKey","isMobile","setIsMobile","useEffect","getTrailer","fetchTrailer","fetchedTrailer","length","key","console","error","handleResize","window","innerWidth","addEventListener","removeEventListener","title","width","height","src","frameBorder","allowFullScreen","useParams","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","getMovieId","fetchMovie","getMovie","to","current","poster_path","defaultImg","alt","original_title","tagline","release_date","genres","Array","isArray","map","genre","name","join","overview","Suspense","fallback","Loader","MovieListWrapper","MovieList","MovieListLi","MovieListLink","MovieListMarkup","movieItems","id","original_name","viewTitle","axios","language","fetchTrendingMov","response","data","results","fetchedMovie","searchMovie","movieName","fetchSearchMovies","fetchCast","fetchedMovieCast","cast","fetchReviews","fetchedReviews","HomeText","trendingsItems","setTrendingItems","fetchData"],"sourceRoot":""}