{"version":3,"file":"static/js/247.6a677614.chunk.js","mappings":"yNA8CA,UA1Ca,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAcR,OAZAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,8GAEmBC,EAAAA,EAAAA,GAAUJ,GAF7B,OAENK,EAFM,OAGZN,EAAQM,GAHI,gDAKZC,QAAQC,MAAR,MALY,yDAAH,qDAQbJ,GACD,GAAE,CAACH,KAGF,4BACE,wBAAI,UACHF,GAAQA,EAAKU,OAAS,GACrB,wBACGV,EAAKW,KAAI,SAAAC,GAAK,OACb,2BACE,wBAAKA,EAAMC,iBAEX,gBACEC,IACEF,EAAMG,aAAN,yCACsCH,EAAMG,cACxC,6EAENC,IAAKJ,EAAMC,kBATND,EAAMK,GADF,MAgBjB,0BAIP,C,8LCxCDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cAHE,6NAIFA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,OAA0C,mBAC1CA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,SAAU,SAGL,IAAMC,EAAgB,mCAAG,oGACPF,EAAAA,EAAAA,IAAU,oBADH,cACxBG,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qDAKhBC,EAAU,mCAAG,WAAMtB,GAAN,uFACGgB,EAAAA,EAAAA,IAAA,gBAAmBhB,IADtB,cAClBuB,EADkB,yBAEjBA,EAAaH,MAFI,2CAAH,sDAKVI,EAAW,mCAAG,WAAMC,GAAN,uFACOT,EAAAA,EAAAA,IAAA,6BAAgCS,IADvC,cACnBC,EADmB,yBAElBA,EAAkBN,KAAKC,SAFL,2CAAH,sDAKXjB,EAAS,mCAAG,WAAMJ,GAAN,uFACQgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,aADR,cACjBK,EADiB,yBAEhBA,EAAiBe,KAAKtB,MAFN,2CAAH,sDAKT6B,EAAY,mCAAG,WAAM3B,GAAN,uFACGgB,EAAAA,EAAAA,IAAA,gBAAmBhB,EAAnB,aADH,cACpB4B,EADoB,yBAEnBA,EAAeR,KAAKC,SAFD,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from '../api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCast = async () => {\n      try {\n        const fetchedMovieCast = await fetchCast(movieId);\n        setCast(fetchedMovieCast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>Cast:</h2>\n      {cast && cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <h3>{actor.original_name}</h3>\n\n              <img\n                src={\n                  actor.profile_path\n                    ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                    : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300'\n                }\n                alt={actor.original_name}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        'Cast not found â˜¹'\n      )}\n    </div>\n  );\n};\nexport default Cast;\n","import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport const fetchTrendingMov = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const fetchedMovie = await axios.get(`movie/${movieId}`);\n  return fetchedMovie.data;\n};\n\nexport const searchMovie = async movieName => {\n  const fetchSearchMovies = await axios.get(`search/movie?query=${movieName}`);\n  return fetchSearchMovies.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const fetchedMovieCast = await axios.get(`movie/${movieId}/credits`);\n  return fetchedMovieCast.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const fetchedReviews = await axios.get(`movie/${movieId}/reviews`);\n  return fetchedReviews.data.results;\n};\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getCast","fetchCast","fetchedMovieCast","console","error","length","map","actor","original_name","src","profile_path","alt","id","axios","language","fetchTrendingMov","response","data","results","fetchMovie","fetchedMovie","searchMovie","movieName","fetchSearchMovies","fetchReviews","fetchedReviews"],"sourceRoot":""}