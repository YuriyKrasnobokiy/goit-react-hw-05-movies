{"version":3,"file":"static/js/933.972f4370.chunk.js","mappings":"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","sources":["components/Trending.Styled.js","components/api.js","pages/Home.jsx","components/SearchBar.Styled.js","components/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const TrendList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const TrendLi = styled.li`\n  border: 1px solid #ccc;\n  padding: 10px;\n  text-align: center;\n`;\n","import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport const fetchTrendingMov = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const fetchedMovie = await axios.get(`movie/${movieId}`);\n  return fetchedMovie.data;\n};\n\nexport const searchMovie = async movieName => {\n  const fetchSearchMovies = await axios.get(`search/movie?query=${movieName}`);\n  return fetchSearchMovies.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const fetchedMovieCast = await axios.get(`movie/${movieId}/credits`);\n  return fetchedMovieCast.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const fetchedReviews = await axios.get(`movie/${movieId}/reviews`);\n  return fetchedReviews.data.results;\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\nimport { TrendLi, TrendList } from '../components/Trending.Styled';\nimport { fetchTrendingMov } from '../components/api';\nexport const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\nconst Home = () => {\n  const [trendingsItems, setTrendingItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchTrendingMov();\n        setTrendingItems(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Hello!</h1>\n      <h2>Tranding movies today:</h2>\n      <TrendList>\n        {trendingsItems &&\n          trendingsItems.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const viewTitle =\n                title || name || original_title || original_name;\n              return (\n                <TrendLi key={id}>\n                  <Link to={`/movies/${id}`}>\n                    {viewTitle}\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={original_title}\n                    />\n                  </Link>\n                </TrendLi>\n              );\n            }\n          )}\n      </TrendList>\n    </div>\n  );\n};\nexport default Home;\n","import styled from 'styled-components';\nimport { HiSearch } from 'react-icons/hi';\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  position: relative;\n  margin-bottom: 16px;\n  text-transform: uppercase;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 32px 8px 8px;\n  border-radius: 4px;\n  font: inherit;\n`;\n\nexport const Icon = styled(HiSearch)`\n  width: 20px;\n  height: 20px;\n  position: absolute;\n  right: 6px;\n`;\n","import { Input } from './SearchBar.Styled';\n\nexport const SearchBar = ({ handlerSubmit }) => {\n  return (\n    <form onSubmit={handlerSubmit}>\n      <Input type=\"text\" name=\"movieName\" placeholder=\"Search movie name\" />\n      <button type=\"submit\">Search movie name</button>\n    </form>\n  );\n};\n","import { SearchBar } from 'components/SearchBar';\nimport { TrendLi, TrendList } from 'components/Trending.Styled';\nimport { searchMovie } from 'components/api';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { defaultImg } from './Home';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const location = useLocation();\n  const [gallarySearch, setGallarySearch] = useState([]);\n\n  useEffect(() => {\n    const getSearch = async () => {\n      try {\n        const fetchedSearch = await searchMovie(movieName);\n        setGallarySearch(fetchedSearch);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    getSearch();\n  }, [movieName]);\n\n  const handlerSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ movieName: form.elements.movieName.value });\n    form.reset();\n  };\n\n  return (\n    <main>\n      <SearchBar handlerSubmit={handlerSubmit} />\n\n      <TrendList>\n        {gallarySearch &&\n          gallarySearch.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const viewTitle =\n                title || name || original_title || original_name;\n              return (\n                <TrendLi key={id}>\n                  <Link to={`/movies/${id}`} state={{ from: location }}>\n                    {viewTitle}\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={original_title}\n                    />\n                  </Link>\n                </TrendLi>\n              );\n            }\n          )}\n      </TrendList>\n    </main>\n  );\n};\nexport default Movies;\n"],"names":["TrendList","styled","TrendLi","axios","language","fetchTrendingMov","response","data","results","fetchMovie","movieId","fetchedMovie","searchMovie","movieName","fetchSearchMovies","fetchCast","fetchedMovieCast","cast","fetchReviews","fetchedReviews","defaultImg","useState","trendingsItems","setTrendingItems","useEffect","fetchData","console","error","map","id","title","original_title","original_name","name","poster_path","viewTitle","to","src","alt","Input","HiSearch","SearchBar","handlerSubmit","onSubmit","type","placeholder","useSearchParams","searchParams","setSearchParams","get","location","useLocation","gallarySearch","setGallarySearch","getSearch","fetchedSearch","e","preventDefault","form","currentTarget","elements","value","reset","state","from"],"sourceRoot":""}