{"version":3,"file":"static/js/83.fc57bb80.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.Styled.js","components/Trailer/Trailer.jsx","components/MovieDetails/MovieDetails.jsx","components/MovieList/MovieList.Styled.js","components/MovieList/MovieList.jsx","components/api.js","pages/Home.Styled.js","pages/Home.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const BackLinkStyled = styled(Link)`\n  display: flex;\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: rgba(128, 0, 128, 0.8);\n  }\n\n  &:focus {\n    color: rgba(128, 0, 128, 0.8);\n  }\n`;\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  /* justify-content: center; */\n  padding: 20px 0;\n`;\n\nexport const DetailsWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const DetailsTextWrapper = styled.div`\n  margin-bottom: 20px;\n`;\n\nexport const DetailsUlStyled = styled.ul`\n  display: flex;\n`;\n\nexport const DetailsLiStyled = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nexport const DetailsLinkStyled = styled(Link)`\n  font-size: 16px;\n  color: inherit;\n  text-decoration: none;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: rgba(128, 0, 128, 0.8);\n  }\n\n  &:focus {\n    color: rgba(128, 0, 128, 0.8);\n  }\n`;\n","import { fetchTrailer } from 'components/api';\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\nconst MovieTrailer = ({ movieId }) => {\n  const [trailerKey, setTrailerKey] = useState('');\n\n  useEffect(() => {\n    const getTrailer = async () => {\n      try {\n        const fetchedTrailer = await fetchTrailer(movieId);\n        if (fetchedTrailer.length > 0) {\n          setTrailerKey(fetchedTrailer[0].key);\n        }\n      } catch (error) {\n        console.error('Error fetching trailer:', error);\n      }\n    };\n\n    getTrailer();\n  }, [movieId]);\n\n  return (\n    <div>\n      {trailerKey && (\n        <iframe\n          title=\"movie-trailer\"\n          width=\"560\"\n          height=\"315\"\n          src={`https://www.youtube.com/embed/${trailerKey}`}\n          frameBorder=\"0\"\n          allowFullScreen\n        ></iframe>\n      )}\n    </div>\n  );\n};\n\nexport default MovieTrailer;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { fetchMovie } from 'components/api';\nimport { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { defaultImg } from '../../pages/Home';\nimport {\n  MovieWrap,\n  DetailsTextWrapper,\n  DetailsWrapper,\n  Wrapper,\n  BackLinkStyled,\n  DetailsLinkStyled,\n  DetailsUlStyled,\n  DetailsLiStyled,\n} from 'components/MovieDetails/MovieDetails.Styled';\nimport { Loader } from 'components/Loader/Loader';\nimport MovieTrailer from 'components/Trailer/Trailer';\nimport { FaArrowLeft } from 'react-icons/fa';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(0);\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n  // console.log(location);\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieId = async () => {\n      try {\n        const getMovie = await fetchMovie(movieId);\n        setMovie(getMovie);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    getMovieId();\n  }, [movieId]);\n\n  return (\n    <Wrapper>\n      <BackLinkStyled to={backLinkLocationRef.current}>\n        <FaArrowLeft />\n        Back\n      </BackLinkStyled>\n      <MovieWrap>\n        <div>\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w400${movie.poster_path}`\n                : defaultImg\n            }\n            alt={movie.title}\n          />\n        </div>\n\n        <DetailsWrapper>\n          <DetailsTextWrapper>\n            <h1>{movie.original_title}</h1>\n            <h2>{movie.tagline}</h2>\n            <h3>Release date: {movie.release_date}</h3>\n            <h3>Genres: </h3>\n            {movie.genres && Array.isArray(movie.genres) ? (\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            ) : (\n              <p>No genres available</p>\n            )}\n            <h3>Overview</h3>\n            <p>{movie.overview}</p>\n          </DetailsTextWrapper>\n          <MovieTrailer movieId={movieId} />\n        </DetailsWrapper>\n      </MovieWrap>\n      <DetailsUlStyled>\n        <DetailsLiStyled>\n          <DetailsLinkStyled to=\"cast\">Cast</DetailsLinkStyled>\n        </DetailsLiStyled>\n        <DetailsLiStyled>\n          <DetailsLinkStyled to=\"reviews\">Reviews</DetailsLinkStyled>\n        </DetailsLiStyled>\n      </DetailsUlStyled>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n};\nexport default MovieDetails;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieListWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const MovieList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  gap: 20px;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  justify-items: center;\n`;\n\nexport const MovieListLi = styled.li`\n  width: 200px;\n  border: transparent;\n  /* padding: 10px; */\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const MovieListLink = styled(Link)`\n  text-decoration: none;\n  color: aliceblue;\n  transition: color 250ms cubic-bezier(0.25, 0.1, 0.25, 1);\n\n  &:hover {\n    color: #6a046a;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport {\n  MovieList,\n  MovieListLi,\n  MovieListLink,\n  MovieListWrapper,\n} from './MovieList.Styled';\n\nexport const MovieListMarkup = ({ movieItems }) => {\n  const location = useLocation();\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\n  return (\n    <MovieListWrapper>\n      <MovieList>\n        {movieItems &&\n          movieItems.map(\n            ({\n              id,\n              title,\n              original_title,\n              original_name,\n              name,\n              poster_path,\n            }) => {\n              const viewTitle =\n                title || name || original_title || original_name;\n              return (\n                <MovieListLi key={id}>\n                  <MovieListLink\n                    to={`/movies/${id}`}\n                    state={{ from: location }}\n                  >\n                    {viewTitle}\n                    <img\n                      src={\n                        poster_path\n                          ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                          : defaultImg\n                      }\n                      alt={original_title}\n                    />\n                  </MovieListLink>\n                </MovieListLi>\n              );\n            }\n          )}\n      </MovieList>\n    </MovieListWrapper>\n  );\n};\n","import axios from 'axios';\n\nconst authorization =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJhZGRiMzc1OTU2OTc0MzQxMDAxMWYwODQ2NDE2MjM1ZiIsInN1YiI6IjY1MzZjN2Y2N2ZjYWIzMDBlYWIzNWM0NCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.QifJaFBfyRNeHIxkyBSq7u6hLriMTe30UhxSyJcvOFE';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] = authorization;\naxios.defaults.headers.common['Accept'] = 'application/json';\naxios.defaults.params = {\n  language: 'en-US',\n};\n\nexport const fetchTrendingMov = async () => {\n  const response = await axios.get('trending/all/day');\n  return response.data.results;\n};\n\nexport const fetchMovie = async movieId => {\n  const fetchedMovie = await axios.get(`movie/${movieId}`);\n  return fetchedMovie.data;\n};\n\nexport const searchMovie = async movieName => {\n  const fetchSearchMovies = await axios.get(`search/movie?query=${movieName}`);\n  return fetchSearchMovies.data.results;\n};\n\nexport const fetchCast = async movieId => {\n  const fetchedMovieCast = await axios.get(`movie/${movieId}/credits`);\n  return fetchedMovieCast.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const fetchedReviews = await axios.get(`movie/${movieId}/reviews`);\n  return fetchedReviews.data.results;\n};\n\nexport const fetchTrailer = async movieId => {\n  const fetchTrailer = await axios.get(`movie/${movieId}/videos`);\n  return fetchTrailer.data.results;\n};\n","import styled from 'styled-components';\n\nexport const HomeText = styled.h1`\n  text-align: center;\n  margin-bottom: 20px;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { fetchTrendingMov } from '../components/api';\nimport { MovieListMarkup } from '../components/MovieList/MovieList';\nimport { HomeText } from './Home.Styled';\n\nexport const defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=200x300';\n\nconst Home = () => {\n  const [trendingsItems, setTrendingItems] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetchTrendingMov();\n        setTrendingItems(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <HomeText>Today's trending movies</HomeText>\n      <MovieListMarkup movieItems={trendingsItems} />\n    </div>\n  );\n};\nexport default Home;\n"],"names":["Wrapper","styled","BackLinkStyled","Link","MovieWrap","DetailsWrapper","DetailsTextWrapper","DetailsUlStyled","DetailsLiStyled","DetailsLinkStyled","movieId","useState","trailerKey","setTrailerKey","useEffect","getTrailer","fetchTrailer","fetchedTrailer","length","key","console","error","title","width","height","src","frameBorder","allowFullScreen","useParams","movie","setMovie","location","useLocation","backLinkLocationRef","useRef","state","from","getMovieId","fetchMovie","getMovie","to","current","poster_path","defaultImg","alt","original_title","tagline","release_date","genres","Array","isArray","map","genre","name","join","overview","Suspense","fallback","Loader","MovieListWrapper","MovieList","MovieListLi","MovieListLink","MovieListMarkup","movieItems","id","original_name","viewTitle","axios","language","fetchTrendingMov","response","data","results","fetchedMovie","searchMovie","movieName","fetchSearchMovies","fetchCast","fetchedMovieCast","cast","fetchReviews","fetchedReviews","HomeText","trendingsItems","setTrendingItems","fetchData"],"sourceRoot":""}